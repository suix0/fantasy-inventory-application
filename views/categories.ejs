<!DOCTYPE html>
<html lang="en">
<%- include('partials/head') %> 
<body>
  <main>
    <button id="addCategoryBtn">Add Category</button>

    <div class="flex gap-4">
      <% categories.forEach(category => { %>
        <div>
          <a href="/categories/<%= category.category_id %>"><%= category.category_name %></a>
          <% if (category.custom) { %>
            <button data-edit="edit" data-category-name="<%= category.category_name %>" id="<%= category.category_id %>">Edit</button>
           <button data-delete="delete" data-category-name="<%= category.category_name %>" id="<%= category.category_id %>">Delete</button>
          <% } %>
        </div>
        <% }) %>
    </div>
  </main>
  <% if (locals.items) { %>
    <div class=" w-[650px]">
      <%- include('itemsTable') %>
    </div>
  <% } %>
  <%- include('partials/nav') %>
  <dialog id="formDialog">
    <form action="/categories/new" method="post">
      <div>
        <label for="categoryName">Cateogy Name</label>
        <input type="text" name="categoryName" id="categoryName">
      </div>
      <div>
        <button id="cancel">Cancel</button>
        <button type="submit">Submit</button>
      </div>
      <%- include('errors/newCategoryError') %>
    </form>
  </dialog>
  <dialog id="deleteConfirmation">
    <form method="post" id="deleteConfirmationForm">
      <p>Are you sure you want to delete <span id="categoryNameSpan"></span></p>
      <p>This action deletes items associated with the category.</p>
      <div>
        <button id="cancelDelete">Cancel</button>
        <button type="submit">Delete</button>
      </div>
    </form>
  </dialog>
  <dialog id="editCategory">
    <form method="post" id="editForm">
      <input type="text" name="categoryName" id="editCategoryName">
      <div>
        <button id="cancelEdit">Cancel</button>
        <button>Submit</button>
      </div>
    </form>
  </dialog>
  <script>
    // Form dialog
    const dialog = document.querySelector("dialog"); 

    // Remain dialog to be open when rerendering categories view
    // after failing form validation
    const openDialogDefault = Boolean("<%= locals.openForm %>");
    if (openDialogDefault) {
      dialog.showModal();
    }

    // Open add form dialog after clicking add category
    const addCategoryBtn = document.querySelector("#addCategoryBtn");
    addCategoryBtn.addEventListener("click", () => {
      dialog.showModal();
    })

    // Close dialog when clicking cancel
    const cancelAddCategoryBtn = document.querySelector("#cancel");
    cancelAddCategoryBtn.addEventListener("click", (e) => {
      e.preventDefault();
      dialog.close();
    })

    const deleteDialog = document.querySelector("#deleteConfirmation"); 

    // Get the delete buttons of the custom categories
    const customCategoryDeleteButtons = document.querySelectorAll("[data-delete]");
    [...customCategoryDeleteButtons].forEach(deleteBtns => {

      // Open dialog when they are clicked and programatically assign action with category
      // to delete to the form confirmation inside dialog
      deleteBtns.addEventListener('click', (e) => {
        const deleteBtnId = Number(e.target.id)

        // Get the category name attached to the delete button
        const categoryName = e.target.dataset.categoryName;
        console.log(categoryName)
        deleteDialog.showModal();

        const span = document.querySelector("#categoryNameSpan");
        span.textContent = categoryName;

        const deleteConfirmationForm = document.querySelector("#deleteConfirmationForm");
        deleteConfirmationForm.setAttribute("action", `/categories/delete/${deleteBtnId}`);
      })
    })

    const cancelBtn = document.querySelector("#cancelDelete");
    cancelBtn.addEventListener("click", (e) => {
      e.preventDefault()
      deleteDialog.close();
    })

    // Apply the same logic behind the delete buttons to the
    // Edit buttons
    const editDialog = document.querySelector("#editCategory");

    // Open modal when rendering categories page with modal open
    // to ensure that we are still on form after error
    const isEditOpen = Boolean("<%= locals.openEditForm %>");
    if (isEditOpen) {
      editDialog.showModal();
    }

    const editButtons = document.querySelectorAll("[data-edit]");
    console.log(editButtons);
    [...editButtons].forEach(editBtn => {
      editBtn.addEventListener("click", (e) => {
        const editBtnId = Number(e.target.id);

        const categoryName = e.target.dataset.categoryName;
        editDialog.showModal();

        const editForm = document.querySelector("#editForm");
        editForm.setAttribute("action", `/categories/edit/${editBtnId}`);
      })
    })


    const cancelBtnEdit = document.querySelector("#cancelEdit");
    cancelBtnEdit.addEventListener("click", (e) => {
      e.preventDefault()
      editDialog.close();
    })
  </script>
</body>
</html>