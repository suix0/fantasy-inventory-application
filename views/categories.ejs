<!DOCTYPE html>
<html lang="en">
<%- include('partials/head') %> 
<body class="h-[100svh] m-0">
  <div class="lg:grid lg:grid-cols-[1fr_2fr_2fr_1fr] md:grid md:grid-rows-[50px_1fr] lg:grid-rows-auto md:grid-cols-[1fr] h-full gap-4">
    <main class="flex flex-col lg:w-[650px] md:w-[unset] md:mx-4 lg:mx-0 bg-secondary opacity-80 p-4 gap-4 lg:col-start-2 lg:col-end-3 md:row-start-2 lg:row-start-1 lg:row-end-3 border-l border-r relative left-0 right-0 top-0 bottom-0 border-primary text-last">
      <button id="addCategoryBtn" class="p-2 text-lg text-secondary bg-last cursor-pointer flex mx-auto w-[150px] justify-center">Add Category</button>
      <div class="flex gap-20 flex-wrap justify-center">
        <% categories.forEach(category => { %>
          <div class="flex flex-col items-center">
            <a href="/categories/<%= category.category_id %>" class="flex flex-col items-center gap-2 no-underline hover:-translate-y-2 transition">
              <% let icon = ""; %>
              <% if (category.category_name === "Weapon") { %>
                <% icon = "/sword.svg"; %>
              <% } else if (category.category_name === "Armor") { %>
                <% icon = "/shield.svg"; %>
              <% } else if (category.category_name === "Potions") { %>
                <% icon = "/potion.svg"; %>
              <% } else if (category.custom) {%>
                <% icon = "/custom.svg" %>
              <% } %>

              <img src="<%= icon %>" alt="Category icon" class="w-20" />
              <span class="text-last text-lg"><%= category.category_name %></span>
            </a>
            <div class="flex gap-4">
              <% if (category.custom) { %>
                <a data-edit="edit" data-category-name="<%= category.category_name %>" id="<%= category.category_id %>" class="cursor-pointer">
                  <img data-edit="edit" data-category-name="<%= category.category_name %>" id="<%= category.category_id %>" src="/edit.svg" alt="Edit icon" title="Edit message button" class="w-7">
                </a>
                <a data-delete="delete" data-category-name="<%= category.category_name %>" id="<%= category.category_id %>" class="cursor-pointer">
                  <img data-delete="delete" data-category-name="<%= category.category_name %>" id="<%= category.category_id %>" src="/delete.svg" alt="Delete icon" title="Delete message button" class="w-7">
                </a>
              <% } %>
              </div>
          </div>
          <% }) %>
        </div>
      </main>
      <div class="flex flex-col gap-32 mx-4 lg:col-start-3 lg:col-end-4 md:row-start-1 md:row-end-2">
        <%- include('partials/nav') %>
        <% if (locals.items) { %>
          <div class="bg-tertiary p-4 opacity-70 mb-[25rem] rounded-md relative" id="itemShow">
            <%- include('itemsTable') %>
            <a id="closeModalBtn">
              <img src="/close.svg" alt="Close item description" id="closeItemImg" class="w-6 absolute right-0 top-0">
            </a>
          </div>
          <% } %>
      </div>
  </div>
  <dialog id="formDialog" class="bg-last text-primary">
    <form action="/categories/new" method="post" class="flex flex-col gap-4 justify-between">
      <div class="flex flex-col gap-2"> 
        <label for="categoryName">Cateogy Name</label>
        <input type="text" name="categoryName" id="categoryName" class="p-2 text-base">
      </div>
      <div class="flex flex-col gap-1">
        <button id="cancel" class="p-2 border text-center no-underline text-black bg-tertiary text-lg cursor-pointer">Cancel</button>
        <button type="submit" class="p-2 cursor-pointer text-last bg-secondary text-lg border-0">Submit</button>
      </div>
      <%- include('errors/newCategoryError') %>
    </form>
  </dialog>
  <dialog id="deleteConfirmation" class="bg-last text-primary">
    <form method="post" id="deleteConfirmationForm">
      <p>Are you sure you want to delete <span id="categoryNameSpan"></span>?</p>
      <p>This action deletes items associated with the category.</p>
      <div class="flex justify-end gap-2">
        <button id="cancelDelete" class="p-2 text-center no-underline text-black bg-tertiary text-lg cursor-pointer border-0">Cancel</button>
        <button type="submit" class="p-2 cursor-pointer text-last bg-red-800  text-lg border-0">Delete</button>
      </div>
    </form>
  </dialog>
  <dialog id="editCategory" class="bg-last text-primary">
    <form method="post" id="editForm" class="flex flex-col gap-4">
      <input type="text" name="categoryName" id="editCategoryName" placeholder="Enter new name" class="p-2 text-lg">
      <div class="flex flex-col gap-2">
        <button id="cancelEdit" class="p-2 text-center no-underline text-black bg-tertiary text-lg cursor-pointer border">Cancel</button>
        <button class="p-2 cursor-pointer text-last bg-secondary text-lg border">Submit</button>
      </div>
      <%- include('errors/newCategoryError') %>
    </form>
  </dialog>
  <script>
    // Form dialog
    const dialog = document.querySelector("dialog"); 

    // Remain dialog to be open when rerendering categories view
    // after failing form validation
    const openDialogDefault = Boolean("<%= locals.openForm %>");
    if (openDialogDefault) {
      dialog.showModal();
    }

    // Open add form dialog after clicking add category
    const addCategoryBtn = document.querySelector("#addCategoryBtn");
    addCategoryBtn.addEventListener("click", () => {
      dialog.showModal();
    })

    // Close dialog when clicking cancel
    const cancelAddCategoryBtn = document.querySelector("#cancel");
    cancelAddCategoryBtn.addEventListener("click", (e) => {
      e.preventDefault();
      dialog.close();
    })

    const deleteDialog = document.querySelector("#deleteConfirmation"); 

    // Get the delete buttons of the custom categories
    const customCategoryDeleteButtons = document.querySelectorAll("[data-delete]");
    [...customCategoryDeleteButtons].forEach(deleteBtns => {

      // Open dialog when they are clicked and programatically assign action with category
      // to delete to the form confirmation inside dialog
      deleteBtns.addEventListener('click', (e) => {
        const deleteBtnId = Number(e.target.id)

        // Get the category name attached to the delete button
        const categoryName = e.target.dataset.categoryName;
        console.log(categoryName)
        deleteDialog.showModal();

        const span = document.querySelector("#categoryNameSpan");
        span.textContent = categoryName;

        const deleteConfirmationForm = document.querySelector("#deleteConfirmationForm");
        deleteConfirmationForm.setAttribute("action", `/categories/delete/${deleteBtnId}`);
      })
    })

    const cancelBtn = document.querySelector("#cancelDelete");
    cancelBtn.addEventListener("click", (e) => {
      e.preventDefault()
      deleteDialog.close();
    })

    // Apply the same logic behind the delete buttons to the
    // Edit buttons
    const editDialog = document.querySelector("#editCategory");

    // Open modal when rendering categories page with modal open
    // to ensure that we are still on form after error
    const isEditOpen = Boolean("<%= locals.openEditForm %>");
    if (isEditOpen) {
      editDialog.showModal();
    }

    const editButtons = document.querySelectorAll("[data-edit]");
    console.log(editButtons);
    [...editButtons].forEach(editBtn => {
      editBtn.addEventListener("click", (e) => {
        const editBtnId = Number(e.target.id);

        const categoryName = e.target.dataset.categoryName;
        editDialog.showModal();

        const editForm = document.querySelector("#editForm");
        editForm.setAttribute("action", `/categories/edit/${editBtnId}`);
      })
    })


    const cancelBtnEdit = document.querySelector("#cancelEdit");
    cancelBtnEdit.addEventListener("click", (e) => {
      e.preventDefault()
      editDialog.close();
    })

    const itemShow = document.querySelector("#itemShow")
    const closeItemDesc = document.querySelector("#closeModalBtn");
     const closeItemImg = document.querySelector("#closeItemImg")

     const close = () => {
      itemShow.style.visibility = 'hidden';
     }
     
     closeItemDesc.addEventListener("click", close);
     closeItemImg.addEventListener("click", close);

  </script>
</body>
</html>